{"version":3,"sources":["./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/login/login.module.ts","./src/app/controllers/auth.controller.ts","./src/app/pages/login/login-routing.module.ts"],"names":[],"mappings":"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","file":"pages-login-login-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthController } from 'src/app/controllers/auth.controller';\r\nimport { Usuario } from 'src/app/model/usuario.model';\r\nimport { ToastService } from 'src/app/shared/components/toast.service';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n    public formGroup: FormGroup = new FormGroup({})\r\n\r\n    constructor(\r\n        private authController: AuthController,\r\n        private router: Router,\r\n        private toast: ToastService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        Object.keys(new Usuario()).forEach(attr => {\r\n            this.formGroup.addControl(attr, new FormControl())\r\n        })\r\n    }\r\n\r\n    async login() {\r\n        try {\r\n            let response = await this.authController.login(<Usuario>this.formGroup.value)\r\n            localStorage.setItem('token', response.token)\r\n            localStorage.setItem('user', JSON.stringify(response.usuario))\r\n\r\n            this.router.navigate([''])\r\n        } catch (error) {\r\n            this.toast.present(error.error.message)\r\n        }\r\n    }\r\n\r\n}\r\n","<div class=\"login-content bg-gradient-primary pt-5\">\r\n    <div class=\"container\">\r\n        <div class=\"row justify-content-center\">\r\n            <div class=\"col-xl-10 col-lg-12 col-md-9\">\r\n                <div class=\"card o-hidden border-0 shadow my-5\">\r\n                    <div class=\"card-body p-0\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-6 d-none d-lg-block bg-login-image\"></div>\r\n                            <div class=\"col-lg-6\">\r\n                                <div class=\"login p-5\">\r\n                                    <div class=\"text-center\">\r\n                                        <h1>Seja Bem-vindo de Volta!</h1>\r\n                                    </div>\r\n                                    <form class=\"user\" [formGroup]='formGroup'>\r\n                                        <div class=\"form-group\">\r\n                                            <i class=\"fa fa-envelope\"></i>\r\n                                            <input type=\"email\" class=\"form-control form-control-user\" placeholder=\"Informe sua E-mail\"\r\n                                                formControlName='usuario_email'>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <i class=\"fa fa-lock\"></i>\r\n                                            <input type=\"password\" class=\"form-control form-control-user\" placeholder=\"Informe sua Senha\"\r\n                                                formControlName='usuario_senha'>\r\n                                        </div>\r\n                                        <a class=\"btn btn-send btn-user btn-block\" (click)='login()'>\r\n                                            Acessar\r\n                                        </a>\r\n                                    </form>\r\n                                    <hr>\r\n                                    <div class=\"text-center\">\r\n                                        <a class=\"small\" routerLink=\"/forgot\">Esqueceu a senha?</a>\r\n                                    </div>\r\n                                    <div class=\"text-center\">\r\n                                        <a class=\"small\" routerLink=\"/register\">Fa√ßa sua Conta!</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { SharedModule } from './../../shared/shared.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\nimport { AuthController } from 'src/app/controllers/auth.controller';\n\nconst components = [\n    LoginComponent\n]\n\nconst providers = [\n    AuthController\n]\n\n@NgModule({\n  declarations: [...components],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    SharedModule\n  ],\n  providers: [...providers]\n})\nexport class LoginModule { }\n","import { environment } from 'src/environments/environment';\r\nimport { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Usuario } from '../model/usuario.model';\r\nimport { LoginDTO } from '../model/dtos/login.dto';\r\n\r\n@Injectable()\r\nexport class AuthController {\r\n    private api: string = environment.api\r\n\r\n    constructor(private _http: HttpClient) {}\r\n\r\n    login(usuario: Usuario): Promise<LoginDTO> {\r\n        return this._http\r\n            .post<LoginDTO>(`${this.api}/auth/admin`, usuario)\r\n            .toPromise()\r\n            .then((data) => {\r\n                return data\r\n            })\r\n    }\r\n\r\n    forgot(email: string): Promise<any> {\r\n        return this._http\r\n            .post(`${this.api}/auth/forgot`, { usuario_email: email })\r\n            .toPromise()\r\n            .then((data) => {\r\n                return data\r\n            })\r\n    }\r\n\r\n    createUser(usuario: Usuario): Promise<any> {\r\n        return this._http\r\n            .post(`${this.api}/auth/novo`, usuario)\r\n            .toPromise()\r\n            .then((data) => {\r\n                return data\r\n            })\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: LoginComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n"],"sourceRoot":"webpack:///"}